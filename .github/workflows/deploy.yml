name: Deploy to DigitalOcean Droplet

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect changed services
        id: detect
        run: |
          CHANGED=$(git diff --name-only HEAD^ HEAD)
          echo "Changed files:"
          echo "$CHANGED"

          SERVICES=""

          if echo "$CHANGED" | grep -E '(^Dockerfile|^requirements\.txt|^core/|^controllers/|^models/|^views/|^runserver\.py|^wsgi\.py)'; then
            SERVICES="$SERVICES python-mvc"
          fi

          if echo "$CHANGED" | grep -E '^php/'; then
            SERVICES="$SERVICES php_fpm"
          fi

          if echo "$CHANGED" | grep -E '^nginx/'; then
            SERVICES="$SERVICES nginx"
          fi

          if echo "$CHANGED" | grep -E '^db/'; then
            SERVICES="$SERVICES db"
          fi

          echo "services=$SERVICES" >> $GITHUB_OUTPUT

      - name: Stop if nothing changed
        if: steps.detect.outputs.services == ''
        run: echo "No relevant service changes. Skipping build."

      - name: Deploy with SSH and pull latest code
        if: steps.detect.outputs.services != ''
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /var/www/python_mvc

            git stash
            git pull origin main

            echo "Rebuilding changed services: ${{ steps.detect.outputs.services }}"
            docker compose build --no-cache ${{ steps.detect.outputs.services }}
            docker compose up -d ${{ steps.detect.outputs.services }}
